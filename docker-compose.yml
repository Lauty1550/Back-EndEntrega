services:
  node1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node1
    ports:
      - '3001:3000'
    networks:
      - app-network
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: '3'

  node2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node2
    ports:
      - '3002:3000'
    networks:
      - app-network
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: '3'

  node3:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node3
    ports:
      - '3003:3000'
    networks:
      - app-network
    volumes:
      - .:/app
    environment:
      - NODE_ENV=development
    command: npm run start
    deploy:
      resources:
        limits:
          cpus: '3'

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'
    networks:
      - app-network
    depends_on:
      - node1
      - node2
      - node3

networks:
  app-network:
    driver: bridge
